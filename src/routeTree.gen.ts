/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AuthenticateImport } from "./routes/authenticate";
import { Route as AuthImport } from "./routes/_auth";
import { Route as AuthIndexImport } from "./routes/_auth.index";
import { Route as AuthSettingsImport } from "./routes/_auth.settings";
import { Route as AuthSearchImport } from "./routes/_auth.search";
import { Route as AuthSubjectsIndexImport } from "./routes/_auth.subjects.index";
import { Route as AuthSubjectsSubjIdImport } from "./routes/_auth.subjects.$subjId";
import { Route as AuthReviewsSummaryImport } from "./routes/_auth.reviews.summary";
import { Route as AuthReviewsSettingsImport } from "./routes/_auth.reviews.settings";
import { Route as AuthReviewsSessionImport } from "./routes/_auth.reviews.session";
import { Route as AuthLessonsSummaryImport } from "./routes/_auth.lessons.summary";
import { Route as AuthLessonsSettingsImport } from "./routes/_auth.lessons.settings";
import { Route as AuthLessonsSessionImport } from "./routes/_auth.lessons.session";
import { Route as AuthLessonsQuizImport } from "./routes/_auth.lessons.quiz";

// Create/Update Routes

const AuthenticateRoute = AuthenticateImport.update({
  path: "/authenticate",
  getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any);

const AuthIndexRoute = AuthIndexImport.update({
  path: "/",
  getParentRoute: () => AuthRoute,
} as any);

const AuthSettingsRoute = AuthSettingsImport.update({
  path: "/settings",
  getParentRoute: () => AuthRoute,
} as any);

const AuthSearchRoute = AuthSearchImport.update({
  path: "/search",
  getParentRoute: () => AuthRoute,
} as any);

const AuthSubjectsIndexRoute = AuthSubjectsIndexImport.update({
  path: "/subjects/",
  getParentRoute: () => AuthRoute,
} as any);

const AuthSubjectsSubjIdRoute = AuthSubjectsSubjIdImport.update({
  path: "/subjects/$subjId",
  getParentRoute: () => AuthRoute,
} as any);

const AuthReviewsSummaryRoute = AuthReviewsSummaryImport.update({
  path: "/reviews/summary",
  getParentRoute: () => AuthRoute,
} as any);

const AuthReviewsSettingsRoute = AuthReviewsSettingsImport.update({
  path: "/reviews/settings",
  getParentRoute: () => AuthRoute,
} as any);

const AuthReviewsSessionRoute = AuthReviewsSessionImport.update({
  path: "/reviews/session",
  getParentRoute: () => AuthRoute,
} as any);

const AuthLessonsSummaryRoute = AuthLessonsSummaryImport.update({
  path: "/lessons/summary",
  getParentRoute: () => AuthRoute,
} as any);

const AuthLessonsSettingsRoute = AuthLessonsSettingsImport.update({
  path: "/lessons/settings",
  getParentRoute: () => AuthRoute,
} as any);

const AuthLessonsSessionRoute = AuthLessonsSessionImport.update({
  path: "/lessons/session",
  getParentRoute: () => AuthRoute,
} as any);

const AuthLessonsQuizRoute = AuthLessonsQuizImport.update({
  path: "/lessons/quiz",
  getParentRoute: () => AuthRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_auth": {
      id: "/_auth";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    "/authenticate": {
      id: "/authenticate";
      path: "/authenticate";
      fullPath: "/authenticate";
      preLoaderRoute: typeof AuthenticateImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth/search": {
      id: "/_auth/search";
      path: "/search";
      fullPath: "/search";
      preLoaderRoute: typeof AuthSearchImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/settings": {
      id: "/_auth/settings";
      path: "/settings";
      fullPath: "/settings";
      preLoaderRoute: typeof AuthSettingsImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/": {
      id: "/_auth/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof AuthIndexImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/lessons/quiz": {
      id: "/_auth/lessons/quiz";
      path: "/lessons/quiz";
      fullPath: "/lessons/quiz";
      preLoaderRoute: typeof AuthLessonsQuizImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/lessons/session": {
      id: "/_auth/lessons/session";
      path: "/lessons/session";
      fullPath: "/lessons/session";
      preLoaderRoute: typeof AuthLessonsSessionImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/lessons/settings": {
      id: "/_auth/lessons/settings";
      path: "/lessons/settings";
      fullPath: "/lessons/settings";
      preLoaderRoute: typeof AuthLessonsSettingsImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/lessons/summary": {
      id: "/_auth/lessons/summary";
      path: "/lessons/summary";
      fullPath: "/lessons/summary";
      preLoaderRoute: typeof AuthLessonsSummaryImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/reviews/session": {
      id: "/_auth/reviews/session";
      path: "/reviews/session";
      fullPath: "/reviews/session";
      preLoaderRoute: typeof AuthReviewsSessionImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/reviews/settings": {
      id: "/_auth/reviews/settings";
      path: "/reviews/settings";
      fullPath: "/reviews/settings";
      preLoaderRoute: typeof AuthReviewsSettingsImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/reviews/summary": {
      id: "/_auth/reviews/summary";
      path: "/reviews/summary";
      fullPath: "/reviews/summary";
      preLoaderRoute: typeof AuthReviewsSummaryImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/subjects/$subjId": {
      id: "/_auth/subjects/$subjId";
      path: "/subjects/$subjId";
      fullPath: "/subjects/$subjId";
      preLoaderRoute: typeof AuthSubjectsSubjIdImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/subjects/": {
      id: "/_auth/subjects/";
      path: "/subjects";
      fullPath: "/subjects";
      preLoaderRoute: typeof AuthSubjectsIndexImport;
      parentRoute: typeof AuthImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthSearchRoute,
    AuthSettingsRoute,
    AuthIndexRoute,
    AuthLessonsQuizRoute,
    AuthLessonsSessionRoute,
    AuthLessonsSettingsRoute,
    AuthLessonsSummaryRoute,
    AuthReviewsSessionRoute,
    AuthReviewsSettingsRoute,
    AuthReviewsSummaryRoute,
    AuthSubjectsSubjIdRoute,
    AuthSubjectsIndexRoute,
  }),
  AuthenticateRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/authenticate"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/search",
        "/_auth/settings",
        "/_auth/",
        "/_auth/lessons/quiz",
        "/_auth/lessons/session",
        "/_auth/lessons/settings",
        "/_auth/lessons/summary",
        "/_auth/reviews/session",
        "/_auth/reviews/settings",
        "/_auth/reviews/summary",
        "/_auth/subjects/$subjId",
        "/_auth/subjects/"
      ]
    },
    "/authenticate": {
      "filePath": "authenticate.tsx"
    },
    "/_auth/search": {
      "filePath": "_auth.search.tsx",
      "parent": "/_auth"
    },
    "/_auth/settings": {
      "filePath": "_auth.settings.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/lessons/quiz": {
      "filePath": "_auth.lessons.quiz.tsx",
      "parent": "/_auth"
    },
    "/_auth/lessons/session": {
      "filePath": "_auth.lessons.session.tsx",
      "parent": "/_auth"
    },
    "/_auth/lessons/settings": {
      "filePath": "_auth.lessons.settings.tsx",
      "parent": "/_auth"
    },
    "/_auth/lessons/summary": {
      "filePath": "_auth.lessons.summary.tsx",
      "parent": "/_auth"
    },
    "/_auth/reviews/session": {
      "filePath": "_auth.reviews.session.tsx",
      "parent": "/_auth"
    },
    "/_auth/reviews/settings": {
      "filePath": "_auth.reviews.settings.tsx",
      "parent": "/_auth"
    },
    "/_auth/reviews/summary": {
      "filePath": "_auth.reviews.summary.tsx",
      "parent": "/_auth"
    },
    "/_auth/subjects/$subjId": {
      "filePath": "_auth.subjects.$subjId.tsx",
      "parent": "/_auth"
    },
    "/_auth/subjects/": {
      "filePath": "_auth.subjects.index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
